[tox]
envlist =
    py{39,310,311,312}
    py{39,310,311,312}-min
    py{39,310,311,312}-max
    docs
    lint
isolated_build = true
skip_missing_interpreters = true

[testenv]
deps =
    poetry
setenv =
    # Limit OpenMP on Mac to prevent segfaults
    OMP_NUM_THREADS = 1
    MKL_NUM_THREADS = 1
allowlist_externals =
    poetry
    pip
commands_pre =
    python -m pip install --upgrade pip
    pip install poetry
    poetry config virtualenvs.create false
    poetry install --all-extras
commands =
    poetry run python -m unittest discover tests
    poetry run python -m unittest tests.test_unit_tests

[testenv:py39-min]
description = Test with minimum supported dependency versions (Python 3.9)
commands_pre =
    python -m pip install --upgrade pip
    pip install poetry
    poetry config virtualenvs.create false
    poetry install
    pip install -r requirements/constraints/py39-min.txt

[testenv:py310-min]
description = Test with minimum supported dependency versions (Python 3.10)
commands_pre =
    python -m pip install --upgrade pip
    pip install poetry
    poetry config virtualenvs.create false
    poetry install
    pip install -r requirements/constraints/py310-min.txt

[testenv:py311-min]
description = Test with minimum supported dependency versions (Python 3.11)
commands_pre =
    python -m pip install --upgrade pip
    pip install poetry
    poetry config virtualenvs.create false
    poetry install
    pip install -r requirements/constraints/py311-min.txt

[testenv:py312-min]
description = Test with minimum supported dependency versions (Python 3.12)
commands_pre =
    python -m pip install --upgrade pip
    pip install poetry
    poetry config virtualenvs.create false
    poetry install
    pip install -r requirements/constraints/py312-min.txt

[testenv:py{39,310,311,312}-max]
description = Test with latest dependency versions
commands_pre =
    python -m pip install --upgrade pip
    pip install poetry
    poetry config virtualenvs.create false
    poetry install --all-extras
    # Upgrade to latest versions of key dependencies
    # Temporarily cap numpy to <2.0 to avoid ecosystem breakages in deps (numba, shap, etc.)
    pip install --upgrade 'numpy<2.0' pandas scikit-learn matplotlib transformers
    pip install --upgrade torch datasets xgboost nltk plotly scipy statsmodels

[testenv:docs]
commands_pre =
    python -m pip install --upgrade pip
    pip install poetry
    poetry config virtualenvs.create false
    poetry install --all-extras
commands =
    poetry run make docs

[testenv:lint]
commands_pre =
    python -m pip install --upgrade pip
    pip install poetry
    poetry config virtualenvs.create false
    poetry install --all-extras
commands =
    poetry run make lint
    poetry run make verify-copyright
    poetry run make verify-exposed-credentials

[testenv:freeze]
description = Test with a specific pip freeze file (specify via FREEZE_FILE env var)
allowlist_externals =
    poetry
    pip
    bash
commands_pre =
    python -m pip install --upgrade pip
    pip install poetry
    poetry config virtualenvs.create false
    bash -c 'if [ -n "$FREEZE_FILE" ] && [ -f "$FREEZE_FILE" ]; then pip install -r "$FREEZE_FILE"; else echo "Set FREEZE_FILE env var to pip freeze file path"; exit 1; fi'
    poetry install --no-deps
commands =
    poetry run python -m unittest discover tests -v
