## [class]{.muted} {{ resolved.name }}

```python
class {{ resolved.name }}({% for base in resolved.bases %}{{ base.name }}{% if not loop.last %}, {% endif %}{% endfor %}):
```

{% if resolved.docstring %}
{{ doc.format_docstring(resolved.docstring) }}
{% endif %}

{% if resolved.bases %}
**Inherited members**

{% set base_members = get_inherited_members(resolved.bases[0], full_data) %}
{% if base_members %}
{% set grouped = {} %}
{% for member in base_members %}
    {% if member.base not in grouped %}
        {% set _ = grouped.update({member.base: []}) %}
    {% endif %}
    {% set _ = grouped[member.base].append(member) %}
{% endfor %}
{% for base, members in grouped.items() %}
- **From {{ base }}**: {% for member in members %}{% if member.kind == 'builtin' %}{{ member.name }}{% else %}[{% if member.kind == 'class' %}class {% endif %}{{ member.name }}[()]{.muted}](#{% if member.kind == 'class' %}class-{% endif %}{{ member.name | lower }}){% endif %}{% if not loop.last %}, {% endif %}{% endfor %}

{% endfor %}
{% endif %}
{% endif %}

{% if resolved.members %}
{% for member in resolved.members.values() | sort(attribute='name') %}
{% if member.kind in ['method', 'function'] and not member.name.startswith('_') %}
### [{{ member.name }}[()]{.muted}](#{{ member.name }})

```python
{{ member.name }}({{ member.parameters | map(attribute='name') | join(', ') }})
```

{% if member.docstring %}
{{ doc.format_docstring(member.docstring) }}
{% endif %}

{% endif %}
{% endfor %}
{% endif %}