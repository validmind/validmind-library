{%- from 'macros/types.jinja2' import format_type -%}

{%- macro render_signature(member) -%}
<!-- signatures.jinja2 -->
::: {.signature}

{# Skip 'def' for constructors #}
{%- if not (member.name == "__init__" and member.kind == "method") -%}
<span class="kw">
  {%- if member.kind == "class" or member.kind == "alias" -%}class
  {%- elif member.kind == "function" or member.kind == "method" -%}def
  {%- else -%}{{ member.kind }}
  {%- endif -%}
</span>
{%- endif -%}
{# Use class name for constructors #}
<span class="name">{{ member.parent.name if (member.name == "__init__" and member.kind == "method") else member.name }}</span>{%- if member.parameters -%}({{- '' -}}
  {%- set params = [] -%}
  {%- for param in member.parameters -%}
    {%- if param.name != "self" -%}
      {%- set _ = params.append(param) -%}
    {%- endif -%}
  {%- endfor -%}
  {%- for param in params -%}
    <span class="params"><span class="n">{{ "**" if param.name == "kwargs" else "" }}{{ param.name }}</span>
    {%- if param.annotation -%}
      <span class="p">: </span>{{ format_type(param.annotation, add_links=true) }}
    {%- endif -%}
    {%- if param.default is not none -%}
      <span class="o"> = </span>
      {%- if param.default is string and param.default.startswith("'") and param.default.endswith("'") -%}
        <span class="s1">{{ param.default }}</span>
      {%- else -%}
        <span class="kc">{{ param.default }}</span>
      {%- endif -%}
    {%- endif -%}
    {%- if not loop.last -%}<span class="muted">,</span>{%- endif -%}
    </span>
  {%- endfor -%})
  {%- else -%}()
{%- endif -%}
{%- if member.returns -%}
  <span class="p"> â†’ </span><span class="return-annotation">
    {{- format_type(member.returns, add_links=true) if member.returns else 'Any' -}}
  </span>
{%- endif +%}

:::
{%- endmacro -%}