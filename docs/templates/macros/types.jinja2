{%- set builtin_types = ['str', 'dict', 'list', 'bool', 'int', 'float', 'object', 'callable', 'tuple', 'type', 'None'] -%}
{%- set type_keywords = ['Any', 'Union', 'Dict', 'List', 'Optional', 'Callable', 'Tuple'] -%}

{%- macro format_expr_name(name, module=None, add_links=false) -%}
  {%- if module and name in module.members and module.members[name].kind == "alias" -%}
    {{ module.members[name].target_path }}
  {%- elif name in type_keywords -%}
    <span class="n">{{ name }}</span>
  {%- elif name|lower in builtin_types -%}
    <span class="nb">{{ name }}</span>
  {%- elif add_links and name not in type_keywords -%}
    <a href="/reference/validmind/vm_models.html#class-{{ name|lower }}">validmind.vm_models.{{ name }}</a>
  {%- else -%}
    <span class="n">{{ name }}</span>
  {%- endif -%}
{%- endmacro -%}

{%- macro format_expr_subscript(expr, module=None, add_links=false) -%}
  {{ format_type(expr.left, module, add_links) }}<span class="p">[</span>
  {%- if expr.slice.cls == "ExprTuple" -%}
    {%- for elem in expr.slice.elements -%}
      {{ format_type(elem, module, add_links) }}
      {%- if not loop.last -%}<span class="p">, </span>{%- endif -%}
    {%- endfor -%}
  {%- else -%}
    {{ format_type(expr.slice, module, add_links) }}
  {%- endif -%}
  <span class="p">]</span>
{%- endmacro -%}

{%- macro format_type(type, module=None, add_links=false) -%}
<!-- types.jinja2 - format_type -->
{%- if type is mapping -%}
  {%- if type.cls is defined -%}
    {%- if type.cls == "ExprCall" -%}
      {%- if type.function and type.function.name in ["tags", "tasks"] -%}
        <span class="n">@{{ type.function.name }}(
        {%- for arg in type.arguments -%}
          {{ arg }}
          {%- if not loop.last -%}, {% endif -%}
        {%- endfor -%}
        )</span>
      {%- endif -%}
    {%- elif type.cls == "ExprAttribute" -%}
      {%- if type.get('values') is sequence -%}
        {%- for value in type.get('values') -%}
          {%- if value.cls == "ExprName" -%}
            <span class="n">{{ value.name }}</span>
          {%- endif -%}
          {%- if not loop.last -%}<span class="o">.</span>{%- endif -%}
        {%- endfor -%}
      {%- else -%}
        <span class="n">{{ type|string }}</span>
      {%- endif -%}
    {%- elif type.cls == "ExprName" -%}
      {{ format_expr_name(type.name, module, add_links) }}
    {%- elif type.cls == "ExprList" or type.cls == "ExprSet" -%}
      <span class="p">{{ '[' if type.cls == "ExprList" else '{' }}</span>
      {%- for elem in type.elements -%}
        {{ format_type(elem, module, add_links) }}
        {%- if not loop.last -%}<span class="p">, </span>{%- endif -%}
      {%- endfor -%}
      <span class="p">{{ ']' if type.cls == "ExprList" else '}' }}</span>
    {%- elif type.cls == "ExprSubscript" -%}
      {{ format_expr_subscript(type, module, add_links) }}
    {%- else -%}
      <span class="n">{{ type|string }}</span>
    {%- endif -%}
  {%- elif type.kind is defined -%}
    {%- if type.kind == "union" -%}
      <span class="n">Union</span><span class="p">[</span>
      {%- for t in type.types -%}
        {{ format_type(t, module, add_links) }}
        {%- if not loop.last -%}<span class="p">, </span>{%- endif -%}
      {%- endfor -%}
      <span class="p">]</span>
    {%- elif type.kind == "generic" -%}
      <span class="n">{{ type.base }}</span><span class="p">[</span>
      {%- for arg in type.args -%}
        {{ format_type(arg, module, add_links) }}
        {%- if not loop.last -%}<span class="p">, </span>{%- endif -%}
      {%- endfor -%}
      <span class="p">]</span>
    {%- endif -%}
  {%- else -%}
    <span class="n">{{ type|string }}</span>
  {%- endif -%}
{%- elif type is string -%}
  {%- if type.startswith("'") or type.startswith('"') -%}
    <span class="s">{{ type }}</span>
  {%- elif type in type_keywords -%}
    <span class="n">{{ type }}</span>
  {%- elif type|lower in builtin_types -%}
    <span class="nb">{{ type }}</span>
  {%- else -%}
    <span class="n">{{ type }}</span>
  {%- endif -%}
{%- else -%}
  <span class="n">{{ type|string }}</span>
{%- endif -%}
{%- endmacro -%}

{%- macro format_return_type(returns) -%}
<!-- types.jinja2 - format_return_type -->
{%- if returns.cls == "ExprName" -%}
    {%- if returns.name in validmind.members.client.members and validmind.members.client.members[returns.name].kind == "alias" -%}
        {{ validmind.members.client.members[returns.name].target_path }}
    {%- else -%}
        {{ returns.name }}
    {%- endif -%}
{%- elif returns.cls == "ExprSubscript" and returns.left is defined -%}
    {{ returns.left.name }}[
    {%- if returns.slice.cls == "ExprTuple" -%}
        {{ returns.slice.elements|map(attribute="name")|join(", ") }}
    {%- else -%}
        {{ returns.slice.name }}
    {%- endif -%}
    ]
{%- else -%}
    {{ returns|string }}
{%- endif -%}
{%- endmacro %}

{%- macro format_module_return_type(returns, module, full_data) -%}
<!-- types.jinja2 - format_module_return_type -->
{%- if returns.cls == "ExprName" -%}
    {%- if returns.name in module.members and module.members[returns.name].kind == "alias" -%}
        {{ module.members[returns.name].target_path }}
    {%- else -%}
        {{ returns.name }}
    {%- endif -%}
{%- elif returns.cls == "ExprSubscript" and returns.left is defined -%}
    {{ returns.left.name }}[
    {%- if returns.slice.cls == "ExprTuple" -%}
        {{ returns.slice.elements|map(attribute="name")|join(", ") }}
    {%- else -%}
        {{ returns.slice.name }}
    {%- endif -%}
    ]
{%- else -%}
    {{ returns|string }}
{%- endif -%}
{%- endmacro %}