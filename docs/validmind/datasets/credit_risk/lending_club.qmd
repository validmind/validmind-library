---
title: lending_club
toc-depth: 3
toc-expand: 3
---






#### compute_scores

```python
def compute_scores(
    probabilities):
```

 
#### feature_engineering

```python
def feature_engineering(
    df,
    verbose = True):
```

 
#### get_demo_test_config

```python
def get_demo_test_config(
    x_test = None,
    y_test = None):
```

Get demo test configuration.

**Arguments**

- **x_test****: Test features DataFrame
- **y_test**: Test target Series

**Returns**

- **dict**: Test configuration dictionary




 
#### init_vm_objects

```python
def init_vm_objects(
    scorecard):
```

 
#### load_data

```python
def load_data(
    source = 'online',
    verbose = True):
```

Load data from either an online source or offline files, automatically dropping specified columns for offline data.


**Parameters**

- **source**: 'online' for online data, 'offline' for offline files. Defaults to 'online'.

**Returns**

- DataFrame containing the loaded data.




 
#### load_scorecard

```python
def load_scorecard(
):
```

 
#### load_test_config

```python
def load_test_config(
    scorecard):
```

 
#### preprocess

```python
def preprocess(
    df,
    verbose = True):
```

 
#### split

```python
def split(
    df,
    validation_size = None,
    test_size = 0.2,
    add_constant = False,
    verbose = True):
```

Split dataset into train, validation (optional), and test sets.

**Arguments**

- **df****: Input DataFrame
- **validation_split**: If None, returns train/test split. If float, returns train/val/test split
- **test_size**: Proportion of data for test set (default: 0.2)
- **add_constant**: Whether to add constant column for statsmodels (default: False)

**Returns**

- **If validation_size is None**: train_df, test_df
- **If validation_size is float**: train_df, validation_df, test_df




 
#### woe_encoding

```python
def woe_encoding(
    df,
    verbose = True):
```

 